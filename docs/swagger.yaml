basePath: /api/v1
info:
  contact:
    name: Ruizhe Zhang
    url: https://github.com/nolanzzz
  description: This is a api server for a shared task management tool
  title: go-todo
  version: "1.0"
paths:
  /api/v1/Users/login:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{"token":string},"msg":"user login succeed"}'
          schema:
            type: string
      summary: User login
      tags:
      - Users
  /api/v1/Users/register:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"user register succeed"}'
          schema:
            type: string
      summary: Register new account
      tags:
      - Users
  /api/v1/ranking/minutes/:limit:
    get:
      parameters:
      - description: number of records
        in: path
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{"ranking":{}},"msg":"succeed"}'
          schema:
            type: string
      summary: Get ranking by total sum of minutes
      tags:
      - Ranking
  /api/v1/ranking/todos/:limit:
    get:
      parameters:
      - description: number of records
        in: path
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{"ranking":{}},"msg":"succeed"}'
          schema:
            type: string
      summary: Get ranking by number of todos
      tags:
      - Ranking
  /api/v1/todo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{"items":{}},"msg":"succeed"}'
          schema:
            type: string
      summary: Get all todo tasks
      tags:
      - Todo
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"todo create succeed"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create new todo task
      tags:
      - Todo
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"todo update succeed"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update an existing todo task
      tags:
      - Todo
  /api/v1/todo/:id:
    get:
      parameters:
      - description: id of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{"item":{}},"msg":"succeed"}'
          schema:
            type: string
      summary: Get one todo task
      tags:
      - Todo
  /api/v1/todo/by/:userID:
    get:
      parameters:
      - description: id of user
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{"items":{}},"msg":"succeed"}'
          schema:
            type: string
      summary: Get all todo tasks of a specific user
      tags:
      - Todo
  /api/v1/todo/done/:id:
    put:
      parameters:
      - description: id of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"todo completed"}'
          schema:
            type: string
      summary: Mark a task as completed
      tags:
      - Todo
  /api/v1/todo/undone/:id:
    put:
      parameters:
      - description: id of task
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"todo undone"}'
          schema:
            type: string
      summary: Undone a todo task
      tags:
      - Todo
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
